# Generated from lde_lexer.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,114,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,
        7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
        1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
        1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,
        4,17,99,8,17,11,17,12,17,100,1,17,1,17,4,17,105,8,17,11,17,12,17,
        106,3,17,109,8,17,1,18,1,18,1,18,1,18,0,0,19,1,1,3,2,5,3,7,4,9,5,
        11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
        17,35,18,37,19,1,0,2,1,0,48,57,3,0,9,10,13,13,32,32,116,0,1,1,0,
        0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
        0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
        0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,
        0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,0,0,3,41,1,0,0,0,
        5,43,1,0,0,0,7,45,1,0,0,0,9,47,1,0,0,0,11,49,1,0,0,0,13,51,1,0,0,
        0,15,55,1,0,0,0,17,59,1,0,0,0,19,63,1,0,0,0,21,68,1,0,0,0,23,73,
        1,0,0,0,25,78,1,0,0,0,27,83,1,0,0,0,29,88,1,0,0,0,31,93,1,0,0,0,
        33,95,1,0,0,0,35,98,1,0,0,0,37,110,1,0,0,0,39,40,5,43,0,0,40,2,1,
        0,0,0,41,42,5,45,0,0,42,4,1,0,0,0,43,44,5,42,0,0,44,6,1,0,0,0,45,
        46,5,47,0,0,46,8,1,0,0,0,47,48,5,37,0,0,48,10,1,0,0,0,49,50,5,94,
        0,0,50,12,1,0,0,0,51,52,5,115,0,0,52,53,5,105,0,0,53,54,5,110,0,
        0,54,14,1,0,0,0,55,56,5,99,0,0,56,57,5,111,0,0,57,58,5,115,0,0,58,
        16,1,0,0,0,59,60,5,116,0,0,60,61,5,97,0,0,61,62,5,110,0,0,62,18,
        1,0,0,0,63,64,5,97,0,0,64,65,5,115,0,0,65,66,5,105,0,0,66,67,5,110,
        0,0,67,20,1,0,0,0,68,69,5,97,0,0,69,70,5,99,0,0,70,71,5,111,0,0,
        71,72,5,115,0,0,72,22,1,0,0,0,73,74,5,97,0,0,74,75,5,116,0,0,75,
        76,5,97,0,0,76,77,5,110,0,0,77,24,1,0,0,0,78,79,5,115,0,0,79,80,
        5,105,0,0,80,81,5,110,0,0,81,82,5,104,0,0,82,26,1,0,0,0,83,84,5,
        99,0,0,84,85,5,111,0,0,85,86,5,115,0,0,86,87,5,104,0,0,87,28,1,0,
        0,0,88,89,5,116,0,0,89,90,5,97,0,0,90,91,5,110,0,0,91,92,5,104,0,
        0,92,30,1,0,0,0,93,94,5,40,0,0,94,32,1,0,0,0,95,96,5,41,0,0,96,34,
        1,0,0,0,97,99,7,0,0,0,98,97,1,0,0,0,99,100,1,0,0,0,100,98,1,0,0,
        0,100,101,1,0,0,0,101,108,1,0,0,0,102,104,5,46,0,0,103,105,7,0,0,
        0,104,103,1,0,0,0,105,106,1,0,0,0,106,104,1,0,0,0,106,107,1,0,0,
        0,107,109,1,0,0,0,108,102,1,0,0,0,108,109,1,0,0,0,109,36,1,0,0,0,
        110,111,7,1,0,0,111,112,1,0,0,0,112,113,6,18,0,0,113,38,1,0,0,0,
        4,0,100,106,108,1,6,0,0
    ]

class lde_lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    SUMA = 1
    RESTA = 2
    MULT = 3
    DIV = 4
    MOD = 5
    EXP = 6
    SIN = 7
    COS = 8
    TAN = 9
    ASIN = 10
    ACOS = 11
    ATAN = 12
    SINH = 13
    COSH = 14
    TANH = 15
    LPAREN = 16
    RPAREN = 17
    NUMERO = 18
    ESPACIO = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "'sin'", "'cos'", 
            "'tan'", "'asin'", "'acos'", "'atan'", "'sinh'", "'cosh'", "'tanh'", 
            "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "SUMA", "RESTA", "MULT", "DIV", "MOD", "EXP", "SIN", "COS", 
            "TAN", "ASIN", "ACOS", "ATAN", "SINH", "COSH", "TANH", "LPAREN", 
            "RPAREN", "NUMERO", "ESPACIO" ]

    ruleNames = [ "SUMA", "RESTA", "MULT", "DIV", "MOD", "EXP", "SIN", "COS", 
                  "TAN", "ASIN", "ACOS", "ATAN", "SINH", "COSH", "TANH", 
                  "LPAREN", "RPAREN", "NUMERO", "ESPACIO" ]

    grammarFileName = "lde_lexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


