# Generated from lde_lexer.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,70,514,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,1,0,1,0,1,0,1,0,
        1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,4,5,174,8,5,11,5,
        12,5,175,1,5,1,5,4,5,180,8,5,11,5,12,5,181,1,5,1,5,1,6,1,6,1,6,1,
        6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,
        9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,
        12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,
        14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,
        16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,
        17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,
        19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,
        20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,
        21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,
        22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,
        23,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,
        29,1,29,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,
        33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,
        36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,
        38,1,38,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,
        43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,
        47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,
        49,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,52,1,53,1,53,1,53,1,
        54,1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,
        58,1,58,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,61,1,61,1,62,1,
        62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,
        65,1,65,1,66,1,66,5,66,482,8,66,10,66,12,66,485,9,66,1,67,4,67,488,
        8,67,11,67,12,67,489,1,67,1,67,4,67,494,8,67,11,67,12,67,495,3,67,
        498,8,67,1,68,1,68,1,68,1,68,5,68,504,8,68,10,68,12,68,507,9,68,
        1,68,1,68,1,69,1,69,1,69,1,69,0,0,70,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
        81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
        51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
        121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,
        70,1,0,7,4,0,47,57,65,90,95,95,97,122,3,0,48,57,65,90,97,122,3,0,
        65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,34,
        34,92,92,3,0,9,10,13,13,32,32,521,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
        0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,
        0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
        0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,
        0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,
        0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,
        0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,
        0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,
        0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
        1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,
        0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,
        0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,
        133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,1,141,1,0,
        0,0,3,145,1,0,0,0,5,151,1,0,0,0,7,156,1,0,0,0,9,164,1,0,0,0,11,171,
        1,0,0,0,13,185,1,0,0,0,15,196,1,0,0,0,17,198,1,0,0,0,19,200,1,0,
        0,0,21,205,1,0,0,0,23,216,1,0,0,0,25,225,1,0,0,0,27,233,1,0,0,0,
        29,241,1,0,0,0,31,249,1,0,0,0,33,254,1,0,0,0,35,263,1,0,0,0,37,271,
        1,0,0,0,39,280,1,0,0,0,41,290,1,0,0,0,43,303,1,0,0,0,45,319,1,0,
        0,0,47,329,1,0,0,0,49,337,1,0,0,0,51,339,1,0,0,0,53,341,1,0,0,0,
        55,343,1,0,0,0,57,345,1,0,0,0,59,347,1,0,0,0,61,349,1,0,0,0,63,351,
        1,0,0,0,65,355,1,0,0,0,67,359,1,0,0,0,69,363,1,0,0,0,71,368,1,0,
        0,0,73,373,1,0,0,0,75,378,1,0,0,0,77,383,1,0,0,0,79,388,1,0,0,0,
        81,393,1,0,0,0,83,395,1,0,0,0,85,397,1,0,0,0,87,399,1,0,0,0,89,401,
        1,0,0,0,91,405,1,0,0,0,93,409,1,0,0,0,95,412,1,0,0,0,97,417,1,0,
        0,0,99,422,1,0,0,0,101,428,1,0,0,0,103,430,1,0,0,0,105,432,1,0,0,
        0,107,435,1,0,0,0,109,438,1,0,0,0,111,441,1,0,0,0,113,444,1,0,0,
        0,115,448,1,0,0,0,117,451,1,0,0,0,119,455,1,0,0,0,121,457,1,0,0,
        0,123,459,1,0,0,0,125,463,1,0,0,0,127,469,1,0,0,0,129,475,1,0,0,
        0,131,477,1,0,0,0,133,479,1,0,0,0,135,487,1,0,0,0,137,499,1,0,0,
        0,139,510,1,0,0,0,141,142,5,118,0,0,142,143,5,97,0,0,143,144,5,114,
        0,0,144,2,1,0,0,0,145,146,5,119,0,0,146,147,5,114,0,0,147,148,5,
        105,0,0,148,149,5,116,0,0,149,150,5,101,0,0,150,4,1,0,0,0,151,152,
        5,112,0,0,152,153,5,108,0,0,153,154,5,111,0,0,154,155,5,116,0,0,
        155,6,1,0,0,0,156,157,5,101,0,0,157,158,5,120,0,0,158,159,5,116,
        0,0,159,160,5,114,0,0,160,161,5,97,0,0,161,162,5,99,0,0,162,163,
        5,116,0,0,163,8,1,0,0,0,164,165,5,101,0,0,165,166,5,120,0,0,166,
        167,5,112,0,0,167,168,5,111,0,0,168,169,5,114,0,0,169,170,5,116,
        0,0,170,10,1,0,0,0,171,173,5,39,0,0,172,174,7,0,0,0,173,172,1,0,
        0,0,174,175,1,0,0,0,175,173,1,0,0,0,175,176,1,0,0,0,176,177,1,0,
        0,0,177,179,5,46,0,0,178,180,7,1,0,0,179,178,1,0,0,0,180,181,1,0,
        0,0,181,179,1,0,0,0,181,182,1,0,0,0,182,183,1,0,0,0,183,184,5,39,
        0,0,184,12,1,0,0,0,185,186,5,114,0,0,186,187,5,101,0,0,187,188,5,
        103,0,0,188,189,5,114,0,0,189,190,5,101,0,0,190,191,5,115,0,0,191,
        192,5,115,0,0,192,193,5,105,0,0,193,194,5,111,0,0,194,195,5,110,
        0,0,195,14,1,0,0,0,196,197,5,82,0,0,197,16,1,0,0,0,198,199,5,67,
        0,0,199,18,1,0,0,0,200,201,5,115,0,0,201,202,5,105,0,0,202,203,5,
        122,0,0,203,204,5,101,0,0,204,20,1,0,0,0,205,206,5,99,0,0,206,207,
        5,108,0,0,207,208,5,97,0,0,208,209,5,115,0,0,209,210,5,115,0,0,210,
        211,5,105,0,0,211,212,5,102,0,0,212,213,5,105,0,0,213,214,5,101,
        0,0,214,215,5,114,0,0,215,22,1,0,0,0,216,217,5,101,0,0,217,218,5,
        118,0,0,218,219,5,97,0,0,219,220,5,108,0,0,220,221,5,117,0,0,221,
        222,5,97,0,0,222,223,5,116,0,0,223,224,5,101,0,0,224,24,1,0,0,0,
        225,226,5,112,0,0,226,227,5,114,0,0,227,228,5,101,0,0,228,229,5,
        100,0,0,229,230,5,105,0,0,230,231,5,99,0,0,231,232,5,116,0,0,232,
        26,1,0,0,0,233,234,5,99,0,0,234,235,5,108,0,0,235,236,5,117,0,0,
        236,237,5,115,0,0,237,238,5,116,0,0,238,239,5,101,0,0,239,240,5,
        114,0,0,240,28,1,0,0,0,241,242,5,115,0,0,242,243,5,105,0,0,243,244,
        5,103,0,0,244,245,5,109,0,0,245,246,5,111,0,0,246,247,5,105,0,0,
        247,248,5,100,0,0,248,30,1,0,0,0,249,250,5,114,0,0,250,251,5,101,
        0,0,251,252,5,108,0,0,252,253,5,117,0,0,253,32,1,0,0,0,254,255,5,
        116,0,0,255,256,5,97,0,0,256,257,5,110,0,0,257,258,5,104,0,0,258,
        259,5,95,0,0,259,260,5,97,0,0,260,261,5,99,0,0,261,262,5,116,0,0,
        262,34,1,0,0,0,263,264,5,115,0,0,264,265,5,111,0,0,265,266,5,102,
        0,0,266,267,5,116,0,0,267,268,5,109,0,0,268,269,5,97,0,0,269,270,
        5,120,0,0,270,36,1,0,0,0,271,272,5,98,0,0,272,273,5,97,0,0,273,274,
        5,114,0,0,274,275,5,95,0,0,275,276,5,112,0,0,276,277,5,108,0,0,277,
        278,5,111,0,0,278,279,5,116,0,0,279,38,1,0,0,0,280,281,5,104,0,0,
        281,282,5,105,0,0,282,283,5,115,0,0,283,284,5,116,0,0,284,285,5,
        111,0,0,285,286,5,103,0,0,286,287,5,114,0,0,287,288,5,97,0,0,288,
        289,5,109,0,0,289,40,1,0,0,0,290,291,5,115,0,0,291,292,5,99,0,0,
        292,293,5,97,0,0,293,294,5,116,0,0,294,295,5,116,0,0,295,296,5,101,
        0,0,296,297,5,114,0,0,297,298,5,95,0,0,298,299,5,112,0,0,299,300,
        5,108,0,0,300,301,5,111,0,0,301,302,5,116,0,0,302,42,1,0,0,0,303,
        304,5,115,0,0,304,305,5,99,0,0,305,306,5,97,0,0,306,307,5,116,0,
        0,307,308,5,116,0,0,308,309,5,101,0,0,309,310,5,114,0,0,310,311,
        5,95,0,0,311,312,5,100,0,0,312,313,5,101,0,0,313,314,5,110,0,0,314,
        315,5,115,0,0,315,316,5,105,0,0,316,317,5,116,0,0,317,318,5,121,
        0,0,318,44,1,0,0,0,319,320,5,108,0,0,320,321,5,105,0,0,321,322,5,
        110,0,0,322,323,5,101,0,0,323,324,5,95,0,0,324,325,5,112,0,0,325,
        326,5,108,0,0,326,327,5,111,0,0,327,328,5,116,0,0,328,46,1,0,0,0,
        329,330,5,104,0,0,330,331,5,101,0,0,331,332,5,97,0,0,332,333,5,116,
        0,0,333,334,5,109,0,0,334,335,5,97,0,0,335,336,5,112,0,0,336,48,
        1,0,0,0,337,338,5,43,0,0,338,50,1,0,0,0,339,340,5,45,0,0,340,52,
        1,0,0,0,341,342,5,42,0,0,342,54,1,0,0,0,343,344,5,47,0,0,344,56,
        1,0,0,0,345,346,5,37,0,0,346,58,1,0,0,0,347,348,5,94,0,0,348,60,
        1,0,0,0,349,350,5,61,0,0,350,62,1,0,0,0,351,352,5,115,0,0,352,353,
        5,105,0,0,353,354,5,110,0,0,354,64,1,0,0,0,355,356,5,99,0,0,356,
        357,5,111,0,0,357,358,5,115,0,0,358,66,1,0,0,0,359,360,5,116,0,0,
        360,361,5,97,0,0,361,362,5,110,0,0,362,68,1,0,0,0,363,364,5,97,0,
        0,364,365,5,115,0,0,365,366,5,105,0,0,366,367,5,110,0,0,367,70,1,
        0,0,0,368,369,5,97,0,0,369,370,5,99,0,0,370,371,5,111,0,0,371,372,
        5,115,0,0,372,72,1,0,0,0,373,374,5,97,0,0,374,375,5,116,0,0,375,
        376,5,97,0,0,376,377,5,110,0,0,377,74,1,0,0,0,378,379,5,115,0,0,
        379,380,5,105,0,0,380,381,5,110,0,0,381,382,5,104,0,0,382,76,1,0,
        0,0,383,384,5,99,0,0,384,385,5,111,0,0,385,386,5,115,0,0,386,387,
        5,104,0,0,387,78,1,0,0,0,388,389,5,116,0,0,389,390,5,97,0,0,390,
        391,5,110,0,0,391,392,5,104,0,0,392,80,1,0,0,0,393,394,5,40,0,0,
        394,82,1,0,0,0,395,396,5,41,0,0,396,84,1,0,0,0,397,398,5,91,0,0,
        398,86,1,0,0,0,399,400,5,93,0,0,400,88,1,0,0,0,401,402,5,97,0,0,
        402,403,5,100,0,0,403,404,5,100,0,0,404,90,1,0,0,0,405,406,5,100,
        0,0,406,407,5,101,0,0,407,408,5,108,0,0,408,92,1,0,0,0,409,410,5,
        105,0,0,410,411,5,102,0,0,411,94,1,0,0,0,412,413,5,101,0,0,413,414,
        5,108,0,0,414,415,5,115,0,0,415,416,5,101,0,0,416,96,1,0,0,0,417,
        418,5,116,0,0,418,419,5,114,0,0,419,420,5,117,0,0,420,421,5,101,
        0,0,421,98,1,0,0,0,422,423,5,102,0,0,423,424,5,97,0,0,424,425,5,
        108,0,0,425,426,5,115,0,0,426,427,5,101,0,0,427,100,1,0,0,0,428,
        429,5,62,0,0,429,102,1,0,0,0,430,431,5,60,0,0,431,104,1,0,0,0,432,
        433,5,62,0,0,433,434,5,61,0,0,434,106,1,0,0,0,435,436,5,60,0,0,436,
        437,5,61,0,0,437,108,1,0,0,0,438,439,5,61,0,0,439,440,5,61,0,0,440,
        110,1,0,0,0,441,442,5,33,0,0,442,443,5,61,0,0,443,112,1,0,0,0,444,
        445,5,97,0,0,445,446,5,110,0,0,446,447,5,100,0,0,447,114,1,0,0,0,
        448,449,5,111,0,0,449,450,5,114,0,0,450,116,1,0,0,0,451,452,5,110,
        0,0,452,453,5,111,0,0,453,454,5,116,0,0,454,118,1,0,0,0,455,456,
        5,123,0,0,456,120,1,0,0,0,457,458,5,125,0,0,458,122,1,0,0,0,459,
        460,5,102,0,0,460,461,5,111,0,0,461,462,5,114,0,0,462,124,1,0,0,
        0,463,464,5,119,0,0,464,465,5,104,0,0,465,466,5,105,0,0,466,467,
        5,108,0,0,467,468,5,101,0,0,468,126,1,0,0,0,469,470,5,98,0,0,470,
        471,5,114,0,0,471,472,5,101,0,0,472,473,5,97,0,0,473,474,5,107,0,
        0,474,128,1,0,0,0,475,476,5,44,0,0,476,130,1,0,0,0,477,478,5,46,
        0,0,478,132,1,0,0,0,479,483,7,2,0,0,480,482,7,3,0,0,481,480,1,0,
        0,0,482,485,1,0,0,0,483,481,1,0,0,0,483,484,1,0,0,0,484,134,1,0,
        0,0,485,483,1,0,0,0,486,488,7,4,0,0,487,486,1,0,0,0,488,489,1,0,
        0,0,489,487,1,0,0,0,489,490,1,0,0,0,490,497,1,0,0,0,491,493,5,46,
        0,0,492,494,7,4,0,0,493,492,1,0,0,0,494,495,1,0,0,0,495,493,1,0,
        0,0,495,496,1,0,0,0,496,498,1,0,0,0,497,491,1,0,0,0,497,498,1,0,
        0,0,498,136,1,0,0,0,499,505,5,34,0,0,500,504,8,5,0,0,501,502,5,92,
        0,0,502,504,9,0,0,0,503,500,1,0,0,0,503,501,1,0,0,0,504,507,1,0,
        0,0,505,503,1,0,0,0,505,506,1,0,0,0,506,508,1,0,0,0,507,505,1,0,
        0,0,508,509,5,34,0,0,509,138,1,0,0,0,510,511,7,6,0,0,511,512,1,0,
        0,0,512,513,6,69,0,0,513,140,1,0,0,0,9,0,175,181,483,489,495,497,
        503,505,1,6,0,0
    ]

class lde_lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    VAR = 1
    WRITE = 2
    GRAFICAR = 3
    EXTRAER = 4
    EXPORTAR = 5
    ARCHIVO = 6
    REGRESION = 7
    ROWS = 8
    COLUMNS = 9
    TAMANO = 10
    CLASIFICADOR = 11
    EVALUAR = 12
    PREDECIR = 13
    AGRUPAR = 14
    SIGMOID = 15
    RELU = 16
    TAHACT = 17
    SOFTMAX = 18
    BARRASPLOT = 19
    HISTOGRAMA = 20
    SCATTERPLOT = 21
    SCATTERDENS = 22
    LINEASPLOT = 23
    HEATMAP = 24
    SUMA = 25
    RESTA = 26
    MULT = 27
    DIV = 28
    MOD = 29
    EXP = 30
    IGUAL = 31
    SIN = 32
    COS = 33
    TAN = 34
    ASIN = 35
    ACOS = 36
    ATAN = 37
    SINH = 38
    COSH = 39
    TANH = 40
    LPAREN = 41
    RPAREN = 42
    LBRACKET = 43
    RBRACKET = 44
    ADD = 45
    DEL = 46
    IF = 47
    ELSE = 48
    TRUE = 49
    FALSE = 50
    MAYOR = 51
    MENOR = 52
    MAYOR_IGUAL = 53
    MENOR_IGUAL = 54
    IGUALDAD = 55
    DIFERENTE = 56
    AND = 57
    OR = 58
    NOT = 59
    INBLOCK = 60
    ENBLOCK = 61
    FOR = 62
    WHILE = 63
    BREAK = 64
    COMA = 65
    PUNTO = 66
    ID = 67
    NUMERO = 68
    STRING = 69
    ESPACIO = 70

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'var'", "'write'", "'plot'", "'extract'", "'export'", "'regression'", 
            "'R'", "'C'", "'size'", "'classifier'", "'evaluate'", "'predict'", 
            "'cluster'", "'sigmoid'", "'relu'", "'tanh_act'", "'softmax'", 
            "'bar_plot'", "'histogram'", "'scatter_plot'", "'scatter_density'", 
            "'line_plot'", "'heatmap'", "'+'", "'-'", "'*'", "'/'", "'%'", 
            "'^'", "'='", "'sin'", "'cos'", "'tan'", "'asin'", "'acos'", 
            "'atan'", "'sinh'", "'cosh'", "'tanh'", "'('", "')'", "'['", 
            "']'", "'add'", "'del'", "'if'", "'else'", "'true'", "'false'", 
            "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'and'", "'or'", 
            "'not'", "'{'", "'}'", "'for'", "'while'", "'break'", "','", 
            "'.'" ]

    symbolicNames = [ "<INVALID>",
            "VAR", "WRITE", "GRAFICAR", "EXTRAER", "EXPORTAR", "ARCHIVO", 
            "REGRESION", "ROWS", "COLUMNS", "TAMANO", "CLASIFICADOR", "EVALUAR", 
            "PREDECIR", "AGRUPAR", "SIGMOID", "RELU", "TAHACT", "SOFTMAX", 
            "BARRASPLOT", "HISTOGRAMA", "SCATTERPLOT", "SCATTERDENS", "LINEASPLOT", 
            "HEATMAP", "SUMA", "RESTA", "MULT", "DIV", "MOD", "EXP", "IGUAL", 
            "SIN", "COS", "TAN", "ASIN", "ACOS", "ATAN", "SINH", "COSH", 
            "TANH", "LPAREN", "RPAREN", "LBRACKET", "RBRACKET", "ADD", "DEL", 
            "IF", "ELSE", "TRUE", "FALSE", "MAYOR", "MENOR", "MAYOR_IGUAL", 
            "MENOR_IGUAL", "IGUALDAD", "DIFERENTE", "AND", "OR", "NOT", 
            "INBLOCK", "ENBLOCK", "FOR", "WHILE", "BREAK", "COMA", "PUNTO", 
            "ID", "NUMERO", "STRING", "ESPACIO" ]

    ruleNames = [ "VAR", "WRITE", "GRAFICAR", "EXTRAER", "EXPORTAR", "ARCHIVO", 
                  "REGRESION", "ROWS", "COLUMNS", "TAMANO", "CLASIFICADOR", 
                  "EVALUAR", "PREDECIR", "AGRUPAR", "SIGMOID", "RELU", "TAHACT", 
                  "SOFTMAX", "BARRASPLOT", "HISTOGRAMA", "SCATTERPLOT", 
                  "SCATTERDENS", "LINEASPLOT", "HEATMAP", "SUMA", "RESTA", 
                  "MULT", "DIV", "MOD", "EXP", "IGUAL", "SIN", "COS", "TAN", 
                  "ASIN", "ACOS", "ATAN", "SINH", "COSH", "TANH", "LPAREN", 
                  "RPAREN", "LBRACKET", "RBRACKET", "ADD", "DEL", "IF", 
                  "ELSE", "TRUE", "FALSE", "MAYOR", "MENOR", "MAYOR_IGUAL", 
                  "MENOR_IGUAL", "IGUALDAD", "DIFERENTE", "AND", "OR", "NOT", 
                  "INBLOCK", "ENBLOCK", "FOR", "WHILE", "BREAK", "COMA", 
                  "PUNTO", "ID", "NUMERO", "STRING", "ESPACIO" ]

    grammarFileName = "lde_lexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


